name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: gradle

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew bootJar

    - name: Npm install Web Client
      working-directory: web
      run: npm ci

    - name: Build Web Client
      working-directory: web
      run: npm run build --if-present

    - name: Docker Build and Push Status Check
      id: docker_build_status_check
      uses: docker/build-push-action@v4
      with:
        context: "./status-check"
        file: "Dockerfile"
        platforms: |-
          linux/arm64/v8
        push: true
        tags: michaelilyin/status-check:latest

    - name: Docker Build and Push Web Client
      id: docker_build_web_client
      uses: docker/build-push-action@v4
      with:
        context: "./status-check"
        file: "Dockerfile"
        platforms: |-
          linux/arm64/v8
        push: true
        tags: michaelilyin/status-check:latest

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs:
      - build
    steps:
    - uses: actions/checkout@v3

    - name: Docker Deployment
      uses: wshihadeh/docker-deployment-action@v2
      with:
        remote_docker_host: ${{ secrets.DOCKER_SSH_USER_AND_HOST }}
        remote_docker_port: ${{ secrets.DOCKER_SSH_PORT }}
        ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
        ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
        deployment_mode: docker-compose
        stack_file_name: docker-compose.yaml
        copy_stack_file: 'true'
        deploy_path: '~/deploy'
        pull_images_first: true
        keep_files: 3
        args: up -d
