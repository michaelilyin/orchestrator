version: "3.3"

services:
  status-check:
    image: michaelilyin/status-check:latest
    restart: unless-stopped
    env_file:
      - .env
    environment:
#      RUNTIME_PATH: '//runtime'
      RUNTIME_PATH: '//opt/status-check/runtime'
    privileged: true
    pid: host
    cap_add:
      - SYS_PTRACE
      - SYS_BOOT
#    volumes:
#      - /opt/status-check/runtime:/runtime
    networks:
      - private

  orchestrator-web:
    image: michaelilyin/orchestrator-web:latest
    restart: unless-stopped
    env_file:
        .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.orchestrator.rule=Host(`${HOST}`)"
      - "traefik.http.routers.orchestrator.entrypoints=websecure"
      - "traefik.http.routers.orchestrator.tls=true"
      - "traefik.http.routers.orchestrator.tls.certresolver=lets-encrypt"
      - "traefik.http.services.orchestrator.loadbalancer.server.port=4000"
    networks:
      - web
      - private

#  orchestrator:
#    image: michaelilyin/orchestrator:latest
#    restart: unless-stopped
#    env_file:
#      - .env
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.orchestrator.rule=Host(`${HOST}`)"
#      - "traefik.http.routers.orchestrator.entrypoints=websecure"
#      - "traefik.http.routers.orchestrator.tls=true"
#      - "traefik.http.routers.orchestrator.tls.certresolver=lets-encrypt"
#      - "traefik.http.services.orchestrator.loadbalancer.server.port=8080"
#    volumes:
#      - /var/log/orchestrator:/var/log/orchestrator
#      - /opt/orchestrator/state:/app/state
#      - /opt/orchestrator/config:/app/config
##      - /var/run/systemd:/var/run/systemd
##      - /proc/sys/kernel/sysrq:/proc/sys/kernel/sysrq
##      - /proc/sysrq-trigger:/proc/sysrq-trigger
#    privileged: true
#    cap_add:
#      - SYS_PTRACE
#      - SYS_BOOT
#    networks:
#      - web

networks:
  web:
    external: true
  private: { }
